# Use travis docker infrastructure
sudo: false
# Use a recent OSX image
# cf.
# https://docs.travis-ci.com/user/languages/objective-c/#Supported-OS-X-iOS-SDK-versions
osx_image: xcode7.2
language: cpp

env:
    global:
        - PREFIX=$HOME/prefix
        - MY_CMAKE_OPTIONS="-DCMAKE_PREFIX_PATH=$PREFIX -DCMAKE_INSTALL_PREFIX=$HOME/install"
        - CTEST_OUTPUT_ON_FAILURE=1
        - LINUX=false
        - OSX=false

compiler:
    - gcc

matrix:
    exclude:
        - os: osx
          compiler: gcc

# Install a recent gcc and gcov,
# it will not be necessary once travis worker is based on ubuntu > 12.04.
# Install SWIG for bindings generation
# Install valgrind for memcheck tests
# Adding george-edison55-precise-backports ppa for for cmake 3.x.
# Install python3-dev for the client simulator
addons:
    apt:
        # Travis white list of ppa
        # https://github.com/travis-ci/apt-source-whitelist/blob/master/ubuntu.json
        sources:
            - ubuntu-toolchain-r-test
            - george-edison55-precise-backports
            - llvm-toolchain-precise-3.8
        # Travis white list of dpkg packages
        # https://github.com/travis-ci/apt-package-whitelist/blob/master/ubuntu-precise
        packages:
            - swig
            - g++-4.8
            - cmake-data
            - cmake
            - python3-dev
    coverity_scan:
        project:
            name: "dawagner/parameter-framework"
        description: "Plugin-based and rule-based framework for managing parameters"
        notification_email: david.wagner@intel.com
        build_command_prepend: "cov-configure --comptype gcc --compiler ${CXX}; cov-configure --comptype gcc --compiler ${CC}; cmake -DCMAKE_PREFIX_PATH=$PREFIX ."
        build_command: "make -j 12"
        branch_pattern: coverity_scan

before_install:
    # OS detection
    # TODO: an explicit build matrix may be better but it has limitation, e.g.
    # each matrix entry may only define a single env variable.
    - if [ $TRAVIS_OS_NAME = linux ]; then export LINUX=true; fi
    - if [ $TRAVIS_OS_NAME = osx ]; then export OSX=true; fi
install:
    - wget https://codecov.io/bash -O $HOME/codecov; chmod +x $HOME/codecov
    # This version of catch is known to work.
    - wget --directory-prefix $PREFIX/include
              https://raw.github.com/philsquared/Catch/v1.2.1/single_include/catch.hpp
    - wget -O asio-1.10.6.tar.gz https://github.com/chriskohlhoff/asio/archive/asio-1-10-6.tar.gz
    - tar xf asio-1.10.6.tar.gz -C $PREFIX --strip-components=2 asio-asio-1-10-6/asio
    # Current limitations on OSX builds: no testing, no client-simulator
    # (because we haven't found a straightforward way to have CMake find the
    # python libraries (find_package(PythonLibs)).
    - if $OSX; then
        brew update;
        for package in cmake; do
            if brew list $package; then
              brew outdated $package || brew upgrade $package;
            else
              brew install $package;
            fi;
        done;
      fi

before_script:
    # Force the manualy installed 4.8 version as it is not the default
    - export CC=gcc-4.8 CXX=g++-4.8;

script:
    - echo "ok"
